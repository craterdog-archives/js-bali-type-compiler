1.IfStatement:
PUSH HANDLER 1.IfStatementHandlers

1.1.ConditionClause:
LOAD VARIABLE $a
EXECUTE $asNumeric ON TARGET
LOAD VARIABLE $b
EXECUTE $asNumeric ON TARGET
INVOKE $less WITH 2 PARAMETERS
EXECUTE $asBoolean ON TARGET
JUMP TO 1.2.ConditionClause ON FALSE

1.1.1.EvaluateStatement:
LOAD VARIABLE $b
STORE VARIABLE $a

1.1.2.EvaluateStatement:
PUSH SOURCE `{$foo := bar; $bar := baz}`
STORE VARIABLE $b

1.1.3.ThrowStatement:
LOAD VARIABLE $exception
HANDLE EXCEPTION

1.1.ConditionClauseDone:
JUMP TO 1.IfStatementDone

1.2.ConditionClause:
LOAD VARIABLE $a
EXECUTE $asNumeric ON TARGET
PUSH ELEMENT `0`
EXECUTE $asNumeric ON TARGET
INVOKE $more WITH 2 PARAMETERS
EXECUTE $asBoolean ON TARGET
JUMP TO 1.3.ElseClause ON FALSE

1.2.1.EvaluateStatement:
PUSH ELEMENT `false`
STORE VARIABLE $_result_

1.2.2.EvaluateStatement:
LOAD VARIABLE $b
INVOKE $factorial WITH PARAMETER
STORE VARIABLE $c

1.2.3.ReturnStatement:
LOAD VARIABLE $c
HANDLE RESULT

1.2.ConditionClauseDone:
JUMP TO 1.IfStatementDone

1.3.ElseClause:
SKIP INSTRUCTION

1.3.1.EvaluateStatement:
LOAD VARIABLE $b
INVOKE $parameters
PUSH ELEMENT `1`
PUSH ELEMENT `$tag`
INVOKE $addParameter WITH 3 PARAMETERS
EXECUTE $find ON TARGET WITH PARAMETERS
STORE VARIABLE $d

1.3.2.EvaluateStatement:
PUSH ELEMENT `(3, 4i)`
STORE VARIABLE $_result_

1.3.3.ReturnStatement:
PUSH ELEMENT `none`
HANDLE RESULT

1.3.ElseClauseDone:
SKIP INSTRUCTION

1.IfStatementDone:
POP HANDLER
JUMP TO 1.IfStatementSucceeded

1.IfStatementHandlers:
SKIP INSTRUCTION

1.4.HandleClause:
STORE VARIABLE $exception
LOAD VARIABLE $exception
LOAD VARIABLE $exception
INVOKE $catalog
PUSH ELEMENT `$type`
PUSH ELEMENT `$warning`
INVOKE $setValue WITH 3 PARAMETERS
INVOKE $matches WITH 2 PARAMETERS
JUMP TO 1.5.HandleClause ON FALSE
POP COMPONENT

1.4.1.EvaluateStatement:
LOAD VARIABLE $count
EXECUTE $asNumeric ON TARGET
PUSH ELEMENT `1`
EXECUTE $asNumeric ON TARGET
INVOKE $sum WITH 2 PARAMETERS
STORE VARIABLE $count

1.4.2.EvaluateStatement:
INVOKE $catalog
PUSH ELEMENT `$message`
PUSH ELEMENT `"Something not too serious happened."`
INVOKE $setValue WITH 3 PARAMETERS
PUSH ELEMENT `$exception`
LOAD VARIABLE $exception
INVOKE $setValue WITH 3 PARAMETERS
STORE VARIABLE $_result_

1.4.HandleClauseDone:
JUMP TO 1.IfStatementSucceeded

1.5.HandleClause:
STORE VARIABLE $exception
LOAD VARIABLE $exception
LOAD VARIABLE $exception
INVOKE $catalog
PUSH ELEMENT `$type`
PUSH ELEMENT `$moderate`
INVOKE $setValue WITH 3 PARAMETERS
INVOKE $matches WITH 2 PARAMETERS
JUMP TO 1.IfStatementFailed ON FALSE
POP COMPONENT

1.5.1.EvaluateStatement:
INVOKE $catalog
PUSH ELEMENT `$message`
PUSH ELEMENT `"Something serious happened."`
INVOKE $setValue WITH 3 PARAMETERS
PUSH ELEMENT `$exception`
LOAD VARIABLE $exception
INVOKE $setValue WITH 3 PARAMETERS
STORE VARIABLE $exception

1.5.2.ThrowStatement:
LOAD VARIABLE $exception
HANDLE EXCEPTION

1.5.HandleClauseDone:
JUMP TO 1.IfStatementSucceeded

1.IfStatementFailed:
HANDLE EXCEPTION

1.IfStatementSucceeded:
SKIP INSTRUCTION

2.WhileStatement:
SKIP INSTRUCTION

2.1.ConditionClause:
PUSH ELEMENT `true`
EXECUTE $asBoolean ON TARGET
JUMP TO 2.WhileStatementDone ON FALSE

2.1.1.EvaluateStatement:
LOAD VARIABLE $bar
STORE VARIABLE $foo

2.1.2.IfStatement:
SKIP INSTRUCTION

2.1.2.1.ConditionClause:
LOAD VARIABLE $foo
EXECUTE $asBoolean ON TARGET
JUMP TO 2.1.2.2.ElseClause ON FALSE

2.1.2.1.1.BreakStatement:
JUMP TO 2.WhileStatementDone

2.1.2.1.ConditionClauseDone:
JUMP TO 2.1.2.IfStatementDone

2.1.2.2.ElseClause:
SKIP INSTRUCTION

2.1.2.2.1.WithStatement:
LOAD VARIABLE $sequence
EXECUTE $asSequential ON TARGET
EXECUTE $iterator ON TARGET
STORE VARIABLE $_iterator_1_

2.1.2.2.1.1.ConditionClause:
LOAD VARIABLE $_iterator_1_
EXECUTE $hasNext ON TARGET
JUMP TO 2.1.2.2.1.WithStatementDone ON FALSE
LOAD VARIABLE $_iterator_1_
EXECUTE $getNext ON TARGET
STORE VARIABLE $item

2.1.2.2.1.1.1.SelectStatement:
LOAD VARIABLE $selection
STORE VARIABLE $_selector_2_

2.1.2.2.1.1.1.1.OptionClause:
LOAD VARIABLE $_selector_2_
PUSH ELEMENT `$first`
INVOKE $matches WITH 2 PARAMETERS
JUMP TO 2.1.2.2.1.1.1.2.OptionClause ON FALSE

2.1.2.2.1.1.1.1.1.EvaluateStatement:
PUSH ELEMENT `true`
STORE VARIABLE $_result_

2.1.2.2.1.1.1.1.OptionClauseDone:
JUMP TO 2.1.2.2.1.1.1.SelectStatementDone

2.1.2.2.1.1.1.2.OptionClause:
LOAD VARIABLE $_selector_2_
PUSH ELEMENT `$second`
INVOKE $matches WITH 2 PARAMETERS
JUMP TO 2.1.2.2.1.1.1.3.ElseClause ON FALSE

2.1.2.2.1.1.1.2.1.EvaluateStatement:
PUSH ELEMENT `false`
STORE VARIABLE $_result_

2.1.2.2.1.1.1.2.OptionClauseDone:
JUMP TO 2.1.2.2.1.1.1.SelectStatementDone

2.1.2.2.1.1.1.3.ElseClause:
SKIP INSTRUCTION

2.1.2.2.1.1.1.3.1.ContinueStatement:
JUMP TO 2.1.2.2.1.1.ConditionClause

2.1.2.2.1.1.1.3.ElseClauseDone:
JUMP TO 2.1.2.2.1.1.1.SelectStatementDone

2.1.2.2.1.1.1.SelectStatementDone:
SKIP INSTRUCTION

2.1.2.2.1.ConditionRepeat:
JUMP TO 2.1.2.2.1.1.ConditionClause

2.1.2.2.1.WithStatementDone:
SKIP INSTRUCTION

2.1.2.2.ElseClauseDone:
SKIP INSTRUCTION

2.1.2.IfStatementDone:
SKIP INSTRUCTION

2.ConditionRepeat:
JUMP TO 2.1.ConditionClause

2.WhileStatementDone:
LOAD VARIABLE $_result_
HANDLE RESULT
