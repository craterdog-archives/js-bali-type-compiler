[
    $parameters: []
    $variables: [
        $$location-1
        $$result
        $a
        $b
        $bar
        $c
        $customer
        $d
        $f
        $foo
        $g
        $h
        $item
        $j
        $k
        $list
        $m
        $p
        $reference
        $target
        $variable
        $w
        $x
        $y
        $z
    ]
    $procedures: [$addItem]
    $addresses: [
        "1.EvaluateStatement": 1
        "2.EvaluateStatement": 9
        "3.EvaluateStatement": 11
        "4.EvaluateStatement": 14
        "5.EvaluateStatement": 20
        "6.EvaluateStatement": 24
        "7.EvaluateStatement": 32
        "8.EvaluateStatement": 39
        "9.EvaluateStatement": 42
        "10.EvaluateStatement": 46
        "11.EvaluateStatement": 49
        "12.EvaluateStatement": 52
        "13.EvaluateStatement": 55
        "14.EvaluateStatement": 59
        "15.EvaluateStatement": 63
        "16.EvaluateStatement": 67
        "17.EvaluateStatement": 71
        "18.EvaluateStatement": 75
        "19.EvaluateStatement": 78
        "20.EvaluateStatement": 82
        "21.EvaluateStatement": 86
        "22.EvaluateStatement": 90
        "23.EvaluateStatement": 94
        "24.EvaluateStatement": 98
        "25.EvaluateStatement": 101
        "26.EvaluateStatement": 105
        "27.EvaluateStatement": 109
        "28.EvaluateStatement": 113
        "29.EvaluateStatement": 117
    ]
    $instructions: "
        1.EvaluateStatement:
        INVOKE $catalog
        PUSH LITERAL `$foo`
        LOAD VARIABLE $bar
        INVOKE $setValue WITH 3 PARAMETERS
        PUSH LITERAL `$baz`
        PUSH LITERAL `5`
        INVOKE $setValue WITH 3 PARAMETERS
        STORE VARIABLE $$result
        
        2.EvaluateStatement:
        LOAD VARIABLE $variable
        STORE VARIABLE $$result
        
        3.EvaluateStatement:
        PUSH LITERAL `13`
        INVOKE $isPrime WITH PARAMETER
        STORE VARIABLE $$result
        
        4.EvaluateStatement:
        LOAD VARIABLE $a
        LOAD VARIABLE $b
        INVOKE $sum WITH 2 PARAMETERS
        LOAD VARIABLE $c
        INVOKE $product WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        5.EvaluateStatement:
        LOAD VARIABLE $reference
        STORE VARIABLE $$location-1
        LOAD DOCUMENT $$location-1
        STORE VARIABLE $$result
        
        6.EvaluateStatement:
        LOAD VARIABLE $customer
        PUSH LITERAL `$order`
        INVOKE $getSubcomponent WITH 2 PARAMETERS
        PUSH LITERAL `$item`
        INVOKE $getSubcomponent WITH 2 PARAMETERS
        PUSH LITERAL `5`
        INVOKE $getSubcomponent WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        7.EvaluateStatement:
        LOAD VARIABLE $list
        INVOKE $list
        LOAD VARIABLE $item
        INVOKE $addItem WITH 2 PARAMETERS
        INVOKE $parameters WITH PARAMETER
        EXECUTE $addItem ON TARGET WITH PARAMETERS
        STORE VARIABLE $$result
        
        8.EvaluateStatement:
        PUSH LITERAL `23`
        INVOKE $factorial WITH PARAMETER
        STORE VARIABLE $$result
        
        9.EvaluateStatement:
        PUSH LITERAL `2`
        PUSH LITERAL `8`
        INVOKE $exponential WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        10.EvaluateStatement:
        PUSH LITERAL `pi`
        INVOKE $inverse WITH PARAMETER
        STORE VARIABLE $$result
        
        11.EvaluateStatement:
        PUSH LITERAL `5`
        INVOKE $reciprocal WITH PARAMETER
        STORE VARIABLE $$result
        
        12.EvaluateStatement:
        PUSH LITERAL `(3, 4i)`
        INVOKE $conjugate WITH PARAMETER
        STORE VARIABLE $$result
        
        13.EvaluateStatement:
        LOAD VARIABLE $x
        LOAD VARIABLE $y
        INVOKE $product WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        14.EvaluateStatement:
        LOAD VARIABLE $a
        LOAD VARIABLE $b
        INVOKE $quotient WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        15.EvaluateStatement:
        LOAD VARIABLE $c
        LOAD VARIABLE $d
        INVOKE $remainder WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        16.EvaluateStatement:
        LOAD VARIABLE $x
        LOAD VARIABLE $y
        INVOKE $sum WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        17.EvaluateStatement:
        LOAD VARIABLE $w
        LOAD VARIABLE $z
        INVOKE $difference WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        18.EvaluateStatement:
        PUSH LITERAL `(3, 4i)`
        INVOKE $magnitude WITH PARAMETER
        STORE VARIABLE $$result
        
        19.EvaluateStatement:
        LOAD VARIABLE $a
        LOAD VARIABLE $b
        INVOKE $isLessThan WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        20.EvaluateStatement:
        LOAD VARIABLE $c
        LOAD VARIABLE $d
        INVOKE $isEqualTo WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        21.EvaluateStatement:
        LOAD VARIABLE $f
        LOAD VARIABLE $g
        INVOKE $isMoreThan WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        22.EvaluateStatement:
        LOAD VARIABLE $h
        LOAD VARIABLE $j
        INVOKE $isSameAs WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        23.EvaluateStatement:
        LOAD VARIABLE $k
        LOAD VARIABLE $m
        INVOKE $matches WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        24.EvaluateStatement:
        LOAD VARIABLE $p
        INVOKE $complement WITH PARAMETER
        STORE VARIABLE $$result
        
        25.EvaluateStatement:
        LOAD VARIABLE $a
        LOAD VARIABLE $b
        INVOKE $and WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        26.EvaluateStatement:
        LOAD VARIABLE $c
        LOAD VARIABLE $d
        INVOKE $sans WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        27.EvaluateStatement:
        LOAD VARIABLE $f
        LOAD VARIABLE $g
        INVOKE $xor WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        28.EvaluateStatement:
        LOAD VARIABLE $h
        LOAD VARIABLE $j
        INVOKE $or WITH 2 PARAMETERS
        STORE VARIABLE $$result
        
        29.EvaluateStatement:
        LOAD VARIABLE $foo
        PUSH LITERAL `5`
        INVOKE $default WITH 2 PARAMETERS
        STORE VARIABLE $$result
        LOAD VARIABLE $$result
        HANDLE RESULT
    "(
        $mediatype: "application/basm"
    )
    $bytecode: '
        A00B28016005B86628022803B8668002601580022804FFFF800260036004
        B06E6006B04A8002601380017801800260072805B02A2806B02A2803B02A
        80026010A03D600DB002A845D80180022807A81B800228082809B0198002
        280AA83180022803A8528002280BA810800260176018B04A800260036004
        B04C800260066008B054800260176018B06E800260166019B0168002280B
        FFFF800260036004B036800260066008B03380026009600BB0378002600C
        600EB0398002600F6011B03F80026012A80E800260036004B00480026006
        6008B06080026009600BB07F8002600C600EB0448002600A2803B0158002
        6002E000
    '(
        $base: 16
        $mediatype: "application/bcod"
    )
]
