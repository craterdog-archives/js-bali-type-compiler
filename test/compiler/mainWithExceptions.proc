[
    $parameters: []
    $variables: [
        $error
        $message
        $$queue-1
        $$result
        $target
    ]($type: /bali/collections/Set/v1)
    $procedures: []($type: /bali/collections/Set/v1)
    $addresses: [
        "1.QueueStatement": 1
        "1.QueueStatementDone": 6
        "1.QueueStatementHandlers": 8
        "1.1.HandleClause": 9
        "1.1.1.EvaluateStatement": 20
        "1.1.HandleClauseDone": 22
        "1.2.HandleClause": 23
        "1.2.1.EvaluateStatement": 34
        "1.2.HandleClauseDone": 36
        "1.QueueStatementFailed": 37
        "1.QueueStatementSucceeded": 38
    ]
    $instructions: "
        1.QueueStatement:
        PUSH HANDLER 1.QueueStatementHandlers
        PUSH LITERAL `<bali:/queues/myqueue>`
        STORE VARIABLE $$queue-1
        LOAD VARIABLE $message
        STORE MESSAGE $$queue-1
        
        1.QueueStatementDone:
        POP HANDLER
        JUMP TO 1.QueueStatementSucceeded
        
        1.QueueStatementHandlers:
        SKIP INSTRUCTION
        
        1.1.HandleClause:
        STORE VARIABLE $error
        LOAD VARIABLE $error
        LOAD VARIABLE $error
        INVOKE $catalog
        PUSH LITERAL `$type`
        PUSH LITERAL `"bad"`
        INVOKE $association WITH 2 ARGUMENTS
        INVOKE $addItem WITH 2 ARGUMENTS
        INVOKE $matches WITH 2 ARGUMENTS
        JUMP TO 1.2.HandleClause ON FALSE
        POP COMPONENT
        
        1.1.1.EvaluateStatement:
        PUSH LITERAL `any`
        STORE VARIABLE $$result
        
        1.1.HandleClauseDone:
        JUMP TO 1.QueueStatementSucceeded
        
        1.2.HandleClause:
        STORE VARIABLE $error
        LOAD VARIABLE $error
        LOAD VARIABLE $error
        INVOKE $catalog
        PUSH LITERAL `$type`
        PUSH LITERAL `"horrid"`
        INVOKE $association WITH 2 ARGUMENTS
        INVOKE $addItem WITH 2 ARGUMENTS
        INVOKE $matches WITH 2 ARGUMENTS
        JUMP TO 1.QueueStatementFailed ON FALSE
        POP COMPONENT
        
        1.2.1.EvaluateStatement:
        PUSH LITERAL `none`
        STORE VARIABLE $$result
        
        1.2.HandleClauseDone:
        JUMP TO 1.QueueStatementSucceeded
        
        1.QueueStatementFailed:
        HANDLE EXCEPTION
        
        1.QueueStatementSucceeded:
        LOAD VARIABLE $$result
        HANDLE RESULT
    "($mediatype: "application/basm")
    $bytecode: '
        20082801800360028803400000260000800160016001A01128022803B008
        B001B04C18174800280480040026800160016001A01128022805B008B001
        B04C18254800280680040026E8006004E000
    '(
        $encoding: $base16
        $mediatype: "application/bcod"
    )
]
