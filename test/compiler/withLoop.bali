[
    $procedure: {
        with 1..10 do {
            $x := true
            if x then {
                $y := none
                break loop
            }
            $z := any
        }
    }
    $instructions: "
        1.WithStatement:
        PUSH LITERAL `1..10`
        SEND $iterator TO COMPONENT
        SAVE VARIABLE $iterator-3
        
        1.1.ConditionClause:
        LOAD VARIABLE $iterator-3
        SEND $hasNext TO COMPONENT
        JUMP TO 1.WithStatementDone ON FALSE
        LOAD VARIABLE $iterator-3
        SEND $next TO COMPONENT
        SAVE VARIABLE $item-2
        
        1.1.1.EvaluateStatement:
        ---- Place the recipient on the stack.
        PUSH LITERAL `$x`
        ---- Place the evaluated expression on the stack.
        PUSH LITERAL `true`
        ---- Save the value of the expression in a variable.
        SAVE VARIABLE $x
        
        1.1.2.IfStatement:
        SKIP INSTRUCTION
        
        1.1.2.1.ConditionClause:
        LOAD VARIABLE $x
        JUMP TO 1.1.2.IfStatementDone ON FALSE
        
        1.1.2.1.1.EvaluateStatement:
        ---- Place the recipient on the stack.
        PUSH LITERAL `$y`
        ---- Place the evaluated expression on the stack.
        PUSH LITERAL `none`
        ---- Save the value of the expression in a variable.
        SAVE VARIABLE $y
        
        1.1.2.1.2.BreakStatement:
        JUMP TO 1.WithStatementDone
        
        1.1.2.IfStatementDone:
        SKIP INSTRUCTION
        
        1.1.3.EvaluateStatement:
        ---- Place the recipient on the stack.
        PUSH LITERAL `$z`
        ---- Place the evaluated expression on the stack.
        PUSH LITERAL `any`
        ---- Save the value of the expression in a variable.
        SAVE VARIABLE $z
        
        1.ConditionRepeat:
        JUMP TO 1.1.ConditionClause
        
        1.WithStatementDone:
        LOAD VARIABLE $result-1
        PULL RESULT
    "($mediaType: "application/basm")
    $addresses: [
        "1.WithStatement": 1
        "1.1.ConditionClause": 4
        "1.1.1.EvaluateStatement": 10
        "1.1.2.IfStatement": 13
        "1.1.2.1.ConditionClause": 14
        "1.1.2.1.1.EvaluateStatement": 16
        "1.1.2.1.2.BreakStatement": 19
        "1.1.2.IfStatementDone": 20
        "1.1.3.EvaluateStatement": 21
        "1.ConditionRepeat": 24
        "1.WithStatementDone": 25
    ]
    $bytecode: '
        2801E00280026002E00118196002E0038001280228038004000060041814
        28042805800500190000280628078006000460035000
    '(
        $encoding: $base16
        $mediaType: "application/bcod"
    )
    $arguments: [
        $target
    ]
    $variables: [
        $item-2
        $iterator-3
        $result-1
        $x
        $y
        $z
    ]($type: /bali/collections/Set/v1)
    $messages: [
        $hasNext
        $iterator
        $next
    ]($type: /bali/collections/Set/v1)
]
