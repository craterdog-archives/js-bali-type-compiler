[
    $source: {
        [
            $foo: $bar
            $baz: 5
        ]
        variable
        isZero(13)
        (a + b) * c
        @reference
        customer[$order, $item, 5]
        list.addItem(item)
        23!
        2 ^ 8
        -π
        *(3, 4i)
        x * y
        a / b
        c // d
        x + y
        w - z
        |(3, 4i)|
        a < b
        c = d
        f > g
        h IS j
        k MATCHES m
        NOT p
        a AND b
        c SANS d
        f XOR g
        h OR j
        foo ? 5
    }
    $instructions: "
        1.EvaluateStatement:
        INVOKE $catalog
        PUSH LITERAL `$foo`
        PUSH LITERAL `$bar`
        INVOKE $association WITH 2 ARGUMENTS
        INVOKE $addItem WITH 2 ARGUMENTS
        PUSH LITERAL `$baz`
        PUSH LITERAL `5`
        INVOKE $association WITH 2 ARGUMENTS
        INVOKE $addItem WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        2.EvaluateStatement:
        LOAD VARIABLE $variable
        STORE VARIABLE $$result
        
        3.EvaluateStatement:
        PUSH LITERAL `13`
        INVOKE $isZero WITH 1 ARGUMENT
        STORE VARIABLE $$result
        
        4.EvaluateStatement:
        LOAD VARIABLE $a
        LOAD VARIABLE $b
        INVOKE $sum WITH 2 ARGUMENTS
        LOAD VARIABLE $c
        INVOKE $product WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        5.EvaluateStatement:
        LOAD VARIABLE $reference
        STORE VARIABLE $$location-1
        LOAD DOCUMENT $$location-1
        STORE VARIABLE $$result
        
        6.EvaluateStatement:
        LOAD VARIABLE $customer
        PUSH LITERAL `$order`
        INVOKE $subcomponent WITH 2 ARGUMENTS
        PUSH LITERAL `$item`
        INVOKE $subcomponent WITH 2 ARGUMENTS
        PUSH LITERAL `5`
        INVOKE $subcomponent WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        7.EvaluateStatement:
        LOAD VARIABLE $list
        INVOKE $list
        LOAD VARIABLE $item
        INVOKE $addItem WITH 2 ARGUMENTS
        SEND $addItem TO COMPONENT WITH ARGUMENTS
        STORE VARIABLE $$result
        
        8.EvaluateStatement:
        PUSH LITERAL `23`
        INVOKE $factorial WITH 1 ARGUMENT
        STORE VARIABLE $$result
        
        9.EvaluateStatement:
        PUSH LITERAL `2`
        PUSH LITERAL `8`
        INVOKE $exponential WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        10.EvaluateStatement:
        PUSH LITERAL `π`
        INVOKE $inverse WITH 1 ARGUMENT
        STORE VARIABLE $$result
        
        11.EvaluateStatement:
        PUSH LITERAL `(3, 4i)`
        INVOKE $conjugate WITH 1 ARGUMENT
        STORE VARIABLE $$result
        
        12.EvaluateStatement:
        LOAD VARIABLE $x
        LOAD VARIABLE $y
        INVOKE $product WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        13.EvaluateStatement:
        LOAD VARIABLE $a
        LOAD VARIABLE $b
        INVOKE $quotient WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        14.EvaluateStatement:
        LOAD VARIABLE $c
        LOAD VARIABLE $d
        INVOKE $remainder WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        15.EvaluateStatement:
        LOAD VARIABLE $x
        LOAD VARIABLE $y
        INVOKE $sum WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        16.EvaluateStatement:
        LOAD VARIABLE $w
        LOAD VARIABLE $z
        INVOKE $difference WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        17.EvaluateStatement:
        PUSH LITERAL `(3, 4i)`
        INVOKE $magnitude WITH 1 ARGUMENT
        STORE VARIABLE $$result
        
        18.EvaluateStatement:
        LOAD VARIABLE $a
        LOAD VARIABLE $b
        INVOKE $isLess WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        19.EvaluateStatement:
        LOAD VARIABLE $c
        LOAD VARIABLE $d
        INVOKE $areEqual WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        20.EvaluateStatement:
        LOAD VARIABLE $f
        LOAD VARIABLE $g
        INVOKE $isMore WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        21.EvaluateStatement:
        LOAD VARIABLE $h
        LOAD VARIABLE $j
        INVOKE $areSame WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        22.EvaluateStatement:
        LOAD VARIABLE $k
        LOAD VARIABLE $m
        INVOKE $doesMatch WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        23.EvaluateStatement:
        LOAD VARIABLE $p
        INVOKE $not WITH 1 ARGUMENT
        STORE VARIABLE $$result
        
        24.EvaluateStatement:
        LOAD VARIABLE $a
        LOAD VARIABLE $b
        INVOKE $and WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        25.EvaluateStatement:
        LOAD VARIABLE $c
        LOAD VARIABLE $d
        INVOKE $sans WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        26.EvaluateStatement:
        LOAD VARIABLE $f
        LOAD VARIABLE $g
        INVOKE $xor WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        27.EvaluateStatement:
        LOAD VARIABLE $h
        LOAD VARIABLE $j
        INVOKE $or WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        
        28.EvaluateStatement:
        LOAD VARIABLE $foo
        PUSH LITERAL `5`
        INVOKE $default WITH 2 ARGUMENTS
        STORE VARIABLE $$result
        LOAD VARIABLE $$result
        HANDLE RESULT
    "($mediatype: "application/basm")
    $bytecode: '
        A01428012802B00BB00128032804B00BB0018012601480122805A83F8012
        60016002B07B6003B05A80126011800E780E801260042806B07A2807B07A
        2804B07A8012600DA049600AB001C80180122808A82980122809280AB027
        8012280BA8378012280CA81A801260166017B05A801260016002B05D8012
        60036005B062801260166017B07B801260156018B0218012280CA84B8012
        60016002B03A801260036005B008801260066008B03B80126009600BB009
        8012600C600FB02380126010A84E801260016002B004801260036005B06D
        801260066008B08880126009600BB051801260072804B01F80126012E000
    '(
        $encoding: $base16
        $mediatype: "application/bcod"
    )
    $addresses: [
        "1.EvaluateStatement": 1
        "2.EvaluateStatement": 11
        "3.EvaluateStatement": 13
        "4.EvaluateStatement": 16
        "5.EvaluateStatement": 22
        "6.EvaluateStatement": 26
        "7.EvaluateStatement": 34
        "8.EvaluateStatement": 40
        "9.EvaluateStatement": 43
        "10.EvaluateStatement": 47
        "11.EvaluateStatement": 50
        "12.EvaluateStatement": 53
        "13.EvaluateStatement": 57
        "14.EvaluateStatement": 61
        "15.EvaluateStatement": 65
        "16.EvaluateStatement": 69
        "17.EvaluateStatement": 73
        "18.EvaluateStatement": 76
        "19.EvaluateStatement": 80
        "20.EvaluateStatement": 84
        "21.EvaluateStatement": 88
        "22.EvaluateStatement": 92
        "23.EvaluateStatement": 96
        "24.EvaluateStatement": 99
        "25.EvaluateStatement": 103
        "26.EvaluateStatement": 107
        "27.EvaluateStatement": 111
        "28.EvaluateStatement": 115
    ]
    $parameters: []
    $variables: [
        $a
        $b
        $c
        $customer
        $d
        $f
        $foo
        $g
        $h
        $item
        $j
        $k
        $list
        $$location-1
        $m
        $p
        $reference
        $$result
        $target
        $variable
        $w
        $x
        $y
        $z
    ]($type: /bali/collections/Set/v1)
    $messages: [
        $addItem
    ]($type: /bali/collections/Set/v1)
]
