[
    $parent: none
    $functions: [
        $test: [:]
    ]
    $methods: [
        $test: [
            $procedure: {
                checkout $document from /acme/documents/example/v1.2
                save document
                notarize document as /acme/documents/example/v1.3
                checkout documents[index] at level 2 from /acme/documents/example/v1.3
                save documents[index] as citations[index]
                notarize documents[index] as /acme/documents/example/v1.3.1
                discard documents[index]
            }
            $instructions: "
                1.CheckoutStatement:
                NOTE --Save the name of the contract.
                PUSH LITERAL `/acme/documents/example/v1.2`
                SAVE VARIABLE $name-2
                NOTE --Load a copy of the named contract from the repository.
                LOAD CONTRACT $name-2
                PUSH LITERAL `$document`
                CALL $attribute WITH 2 ARGUMENTS
                CALL $duplicate WITH 1 ARGUMENT
                SAVE VARIABLE $document-3
                NOTE --Calculate the new version string for the new document and save it.
                LOAD VARIABLE $document-3
                CALL $parameters WITH 1 ARGUMENT
                PUSH LITERAL `$version`
                CALL $attribute WITH 2 ARGUMENTS
                PUSH LITERAL `0`
                CALL $nextVersion WITH 2 ARGUMENTS
                SAVE VARIABLE $version-4
                NOTE --Set the new version string parameter for the new document.
                LOAD VARIABLE $document-3
                PUSH LITERAL `$version`
                LOAD VARIABLE $version-4
                CALL $setParameter WITH 3 ARGUMENTS
                PULL COMPONENT
                NOTE --Set the new document as the value of the recipient.
                LOAD VARIABLE $document-3
                SAVE VARIABLE $document
                
                2.SaveStatement:
                NOTE --Place the document on the stack.
                LOAD VARIABLE $document
                NOTE --Save the document to the repository and a citation to it.
                SAVE DOCUMENT $citation-5
                
                3.NotarizeStatement:
                NOTE --Save the name of the new contract.
                PUSH LITERAL `/acme/documents/example/v1.3`
                SAVE VARIABLE $name-6
                NOTE --Notarize the named contract and save to the repository.
                LOAD VARIABLE $document
                SAVE CONTRACT $name-6
                
                4.CheckoutStatement:
                NOTE --Save the name of the contract.
                PUSH LITERAL `/acme/documents/example/v1.3`
                SAVE VARIABLE $name-7
                NOTE --Load a copy of the named contract from the repository.
                LOAD CONTRACT $name-7
                PUSH LITERAL `$document`
                CALL $attribute WITH 2 ARGUMENTS
                CALL $duplicate WITH 1 ARGUMENT
                SAVE VARIABLE $document-8
                NOTE --Calculate the new version string for the new document and save it.
                LOAD VARIABLE $document-8
                CALL $parameters WITH 1 ARGUMENT
                PUSH LITERAL `$version`
                CALL $attribute WITH 2 ARGUMENTS
                PUSH LITERAL `2`
                CALL $nextVersion WITH 2 ARGUMENTS
                SAVE VARIABLE $version-9
                NOTE --Set the new version string parameter for the new document.
                LOAD VARIABLE $document-8
                PUSH LITERAL `$version`
                LOAD VARIABLE $version-9
                CALL $setParameter WITH 3 ARGUMENTS
                PULL COMPONENT
                NOTE --Set the new document as the value of the recipient.
                NOTE --Place the recipient and the index of its attribute on the stack.
                LOAD VARIABLE $documents
                LOAD VARIABLE $index
                LOAD VARIABLE $document-8
                NOTE --Assign the result as the value of the attribute.
                CALL $setAttribute WITH 3 ARGUMENTS
                PULL COMPONENT
                
                5.SaveStatement:
                NOTE --Place the document on the stack.
                LOAD VARIABLE $documents
                LOAD VARIABLE $index
                CALL $attribute WITH 2 ARGUMENTS
                NOTE --Save the document to the repository and a citation to it.
                SAVE DOCUMENT $citation-10
                NOTE --Place the recipient and the index of its attribute on the stack.
                LOAD VARIABLE $citations
                LOAD VARIABLE $index
                LOAD VARIABLE $citation-10
                NOTE --Assign the result as the value of the attribute.
                CALL $setAttribute WITH 3 ARGUMENTS
                PULL COMPONENT
                
                6.NotarizeStatement:
                NOTE --Save the name of the new contract.
                PUSH LITERAL `/acme/documents/example/v1.3.1`
                SAVE VARIABLE $name-11
                NOTE --Notarize the named contract and save to the repository.
                LOAD VARIABLE $documents
                LOAD VARIABLE $index
                CALL $attribute WITH 2 ARGUMENTS
                SAVE CONTRACT $name-11
                
                7.DiscardStatement:
                NOTE --Save the citation to the document.
                LOAD VARIABLE $documents
                LOAD VARIABLE $index
                CALL $attribute WITH 2 ARGUMENTS
                SAVE VARIABLE $citation-12
                NOTE --Drop the cited document from the repository.
                DROP DOCUMENT $citation-12
                LOAD VARIABLE $result-1
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '
                2803800B700B2806D00AC82480066006C8572807D00A2801D052800F6006
                2807600FD878480060068005600588032804800C6005900C2804800D700D
                2806D00AC82480076007C8572807D00A2802D0528010600728076010D878
                4800600860096007D874480060086009D00A8801600460096001D8744800
                2805800A60086009D00A900A60086009D00A8002A802600E5000
            '(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
            ]
            $variables: [
                $citation-10
                $citation-12
                $citation-5
                $citations
                $document
                $document-3
                $document-8
                $documents
                $index
                $name-11
                $name-2
                $name-6
                $name-7
                $result-1
                $version-4
                $version-9
            ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.CheckoutStatement": 1
                "2.SaveStatement": 22
                "3.NotarizeStatement": 24
                "4.CheckoutStatement": 28
                "5.SaveStatement": 52
                "6.NotarizeStatement": 61
                "7.DiscardStatement": 67
            ]($type: /nebula/collections/Catalog/v1($keyType: /nebula/strings/Text/v1, $valueType: /nebula/interfaces/Discrete/v1))
        ]
    ]
    $literals: [
        0
        2
        /acme/documents/example/v1.2
        /acme/documents/example/v1.3
        /acme/documents/example/v1.3.1
        $document
        $version
    ]($type: /nebula/collections/Set/v1)
]
