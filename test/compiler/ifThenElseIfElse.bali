[
    $procedure: {
        if true then {
            yes
        } else if false then {
            no
        } else {
            none
        }
    }
    $instructions: "
        1.IfStatement:
        JUMP TO NEXT INSTRUCTION
        
        1.1.ConditionClause:
        PUSH LITERAL `true`
        JUMP TO 1.2.ConditionClause ON FALSE
        
        1.1.1.EvaluateStatement:
        LOAD REGISTER $yes
        SAVE REGISTER $result-1
        
        1.1.ConditionClauseDone:
        JUMP TO 1.IfStatementDone
        
        1.2.ConditionClause:
        PUSH LITERAL `false`
        JUMP TO 1.3.ElseClause ON FALSE
        
        1.2.1.EvaluateStatement:
        LOAD REGISTER $no
        SAVE REGISTER $result-1
        
        1.2.ConditionClauseDone:
        JUMP TO 1.IfStatementDone
        
        1.3.ElseClause:
        JUMP TO NEXT INSTRUCTION
        
        1.3.1.EvaluateStatement:
        PUSH LITERAL `none`
        SAVE REGISTER $result-1
        
        1.3.ElseClauseDone:
        JUMP TO NEXT INSTRUCTION
        
        1.IfStatementDone:
        LOAD REGISTER $result-1
        PULL RESULT
    "($mediaType: "application/basm")
    $addresses: [
        "1.IfStatement": 1
        "1.1.ConditionClause": 2
        "1.1.1.EvaluateStatement": 4
        "1.1.ConditionClauseDone": 6
        "1.2.ConditionClause": 7
        "1.2.1.EvaluateStatement": 9
        "1.2.ConditionClauseDone": 11
        "1.3.ElseClause": 12
        "1.3.1.EvaluateStatement": 13
        "1.3.ElseClauseDone": 15
        "1.IfStatementDone": 16
    ]
    $bytecode: '
        0000280118076003800200102802180C6001800200100000280380020000
        60025000
    '(
        $encoding: $base16
        $mediaType: "application/bcod"
    )
    $arguments: [
        $target
    ]
    $variables: [
        $no
        $result-1
        $yes
    ]($type: /bali/collections/Set/v1)
    $messages: [ ]($type: /bali/collections/Set/v1)
]
