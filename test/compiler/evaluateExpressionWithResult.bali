[
    $procedure: {
        $foo := bar
        $bar := [
            1
            2
            four - 1
        ]
        document[$customer, $order, 3] := 5
        foo[$bar] += 1
        $counter -= delta
        $angle *= 3
    }
    $instructions: "
        1.EvaluateStatement:
        LOAD VARIABLE $bar
        SAVE VARIABLE $foo
        
        2.EvaluateStatement:
        CALL $list
        NOTE --Add an item to the list.
        PUSH LITERAL `1`
        CALL $addItem WITH 2 ARGUMENTS
        NOTE --Add another item to the list.
        PUSH LITERAL `2`
        CALL $addItem WITH 2 ARGUMENTS
        NOTE --Add another item to the list.
        LOAD VARIABLE $four
        PUSH LITERAL `1`
        CALL $difference WITH 2 ARGUMENTS
        CALL $addItem WITH 2 ARGUMENTS
        SAVE VARIABLE $bar
        
        3.EvaluateStatement:
        NOTE --Place the recipient and the index of its attribute on the stack.
        LOAD VARIABLE $document
        PUSH LITERAL `$customer`
        CALL $attribute WITH 2 ARGUMENTS
        PUSH LITERAL `$order`
        CALL $attribute WITH 2 ARGUMENTS
        PUSH LITERAL `3`
        PUSH LITERAL `5`
        NOTE --Assign the result as the value of the attribute.
        CALL $setAttribute WITH 3 ARGUMENTS
        PULL COMPONENT
        
        4.EvaluateStatement:
        NOTE --Place the recipient and the index of its attribute on the stack.
        LOAD VARIABLE $foo
        PUSH LITERAL `$bar`
        NOTE --Place the current value of the attribute on the stack.
        LOAD VARIABLE $foo
        PUSH LITERAL `$bar`
        CALL $attribute WITH 2 ARGUMENTS
        PUSH LITERAL `1`
        CALL $sum WITH 2 ARGUMENTS
        NOTE --Assign the result as the value of the attribute.
        CALL $setAttribute WITH 3 ARGUMENTS
        PULL COMPONENT
        
        5.EvaluateStatement:
        LOAD VARIABLE $counter
        LOAD VARIABLE $delta
        CALL $difference WITH 2 ARGUMENTS
        SAVE VARIABLE $counter
        
        6.EvaluateStatement:
        LOAD VARIABLE $angle
        PUSH LITERAL `3`
        CALL $scaled WITH 2 ARGUMENTS
        SAVE VARIABLE $angle
        LOAD VARIABLE $result-1
        PULL RESULT
    "($mediaType: "application/basm")
    $addresses: [
        "1.EvaluateStatement": 1
        "2.EvaluateStatement": 3
        "3.EvaluateStatement": 13
        "4.EvaluateStatement": 22
        "5.EvaluateStatement": 31
        "6.EvaluateStatement": 35
    ]
    $bytecode: '
        60028006C0542801D0012802D00160072801D028D001800260052804D00B
        2805D00B28062807D88348006006280860062808D00B2801D08CD8834800
        60036004D028800360012806D07E800160085000
    '(
        $encoding: $base16
        $mediaType: "application/bcod"
    )
    $arguments: [
        $target
    ]
    $variables: [
        $angle
        $bar
        $counter
        $delta
        $document
        $foo
        $four
        $result-1
    ]($type: /bali/collections/Set/v1)
    $messages: [ ]($type: /bali/collections/Set/v1)
]
