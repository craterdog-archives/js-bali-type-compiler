[
    $parent: none
    $operations: [
        $test: [:]
    ]
    $methods: [
        $test: [
            $procedure: {
                $foo := bar
                $bar := [
                    1
                    2
                    four - 1
                ]
                document[$customer, $order, 3] := 5
                foo[$bar] += 1
                $counter -= delta
                $angle *= 3
            }
            $instructions: "
                1.EvaluateStatement:
                LOAD VARIABLE $bar
                SAVE VARIABLE $foo
                
                2.EvaluateStatement:
                NOTE --Place an empty list on the stack.
                CALL $list
                NOTE --Add an item to the list.
                PUSH LITERAL `1`
                CALL $addItem WITH 2 ARGUMENTS
                NOTE --Add another item to the list.
                PUSH LITERAL `2`
                CALL $addItem WITH 2 ARGUMENTS
                NOTE --Add another item to the list.
                LOAD VARIABLE $four
                PUSH LITERAL `1`
                CALL $difference WITH 2 ARGUMENTS
                CALL $addItem WITH 2 ARGUMENTS
                SAVE VARIABLE $bar
                
                3.EvaluateStatement:
                NOTE --Place the recipient and the index of its attribute on the stack.
                LOAD VARIABLE $document
                PUSH LITERAL `$customer`
                CALL $attribute WITH 2 ARGUMENTS
                PUSH LITERAL `$order`
                CALL $attribute WITH 2 ARGUMENTS
                PUSH LITERAL `3`
                PUSH LITERAL `5`
                NOTE --Assign the result as the value of the attribute.
                CALL $setAttribute WITH 3 ARGUMENTS
                PULL COMPONENT
                
                4.EvaluateStatement:
                NOTE --Place the recipient and the index of its attribute on the stack.
                LOAD VARIABLE $foo
                PUSH LITERAL `$bar`
                NOTE --Place the current value of the attribute on the stack.
                LOAD VARIABLE $foo
                PUSH LITERAL `$bar`
                CALL $attribute WITH 2 ARGUMENTS
                PUSH LITERAL `1`
                CALL $sum WITH 2 ARGUMENTS
                NOTE --Assign the result as the value of the attribute.
                CALL $setAttribute WITH 3 ARGUMENTS
                PULL COMPONENT
                
                5.EvaluateStatement:
                LOAD VARIABLE $counter
                LOAD VARIABLE $delta
                CALL $difference WITH 2 ARGUMENTS
                SAVE VARIABLE $counter
                
                6.EvaluateStatement:
                LOAD VARIABLE $angle
                PUSH LITERAL `3`
                CALL $scaled WITH 2 ARGUMENTS
                SAVE VARIABLE $angle
                LOAD VARIABLE $result-1
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '
                60028006C0472801D0012802D00160072801D021D001800260052806D00A
                2807D00A28032804D87448006006280560062805D00A2801D081D8744800
                60036004D021800360012803D06F800160085000
            '(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
            ]
            $variables: [
                $angle
                $bar
                $counter
                $delta
                $document
                $foo
                $four
                $result-1
            ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.EvaluateStatement": 1
                "2.EvaluateStatement": 3
                "3.EvaluateStatement": 13
                "4.EvaluateStatement": 22
                "5.EvaluateStatement": 31
                "6.EvaluateStatement": 35
            ]($type: /nebula/collections/Catalog/v1($keyType: /nebula/strings/Text/v1, $valueType: /nebula/interfaces/Discrete/v1))
        ]
    ]
    $literals: [
        1
        2
        3
        5
        $bar
        $customer
        $order
    ]($type: /nebula/collections/Set/v1)
]
