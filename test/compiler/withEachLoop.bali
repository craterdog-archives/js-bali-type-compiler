[
    $procedure: {
        with each $symbol in sequence do {
            $x := true
            if x then {
                $y := none
                continue loop
            }
            $z := any
        }
    }
    $instructions: "
        1.WithStatement:
        LOAD VARIABLE $sequence
        SEND $iterator TO COMPONENT
        STORE VARIABLE $iterator-2
        
        1.1.ConditionClause:
        LOAD VARIABLE $iterator-2
        SEND $hasNext TO COMPONENT
        JUMP TO 1.WithStatementDone ON FALSE
        LOAD VARIABLE $iterator-2
        SEND $next TO COMPONENT
        STORE VARIABLE $symbol
        
        1.1.1.EvaluateStatement:
        PUSH LITERAL `true`
        STORE VARIABLE $x
        
        1.1.2.IfStatement:
        SKIP INSTRUCTION
        
        1.1.2.1.ConditionClause:
        LOAD VARIABLE $x
        JUMP TO 1.1.2.IfStatementDone ON FALSE
        
        1.1.2.1.1.EvaluateStatement:
        PUSH LITERAL `none`
        STORE VARIABLE $y
        
        1.1.2.1.2.ContinueStatement:
        JUMP TO 1.1.ConditionClause
        
        1.1.2.IfStatementDone:
        SKIP INSTRUCTION
        
        1.1.3.EvaluateStatement:
        PUSH LITERAL `any`
        STORE VARIABLE $z
        
        1.ConditionRepeat:
        JUMP TO 1.1.ConditionClause
        
        1.WithStatementDone:
        LOAD VARIABLE $result-1
        HANDLE RESULT
    "($mediatype: "application/basm")
    $addresses: [
        "1.WithStatement": 1
        "1.1.ConditionClause": 4
        "1.1.1.EvaluateStatement": 10
        "1.1.2.IfStatement": 12
        "1.1.2.1.ConditionClause": 13
        "1.1.2.1.1.EvaluateStatement": 15
        "1.1.2.1.2.ContinueStatement": 17
        "1.1.2.IfStatementDone": 18
        "1.1.3.EvaluateStatement": 19
        "1.ConditionRepeat": 21
        "1.WithStatementDone": 22
    ]
    $bytecode: '
        6003C00280016001C00118166001C0038004280180050000600518122802
        8006000400002803800700046002E000
    '(
        $encoding: $base16
        $mediatype: "application/bcod"
    )
    $arguments: [
        $target
    ]
    $variables: [
        $iterator-2
        $result-1
        $sequence
        $symbol
        $x
        $y
        $z
    ]($type: /bali/collections/Set/v1)
    $messages: [
        $hasNext
        $iterator
        $next
    ]($type: /bali/collections/Set/v1)
]
