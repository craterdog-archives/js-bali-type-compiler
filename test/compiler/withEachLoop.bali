[
    $parent: none
    $operations: [
        $test: [:]
    ]
    $methods: [
        $test: [
            $procedure: {
                with each $symbol in sequence do {
                    $x := true
                    if x then {
                        $y := none
                        continue loop
                    }
                    $z := any
                }
            }
            $instructions: "
                1.WithStatement:
                LOAD VARIABLE $sequence
                SEND $iterator TO COMPONENT
                SAVE VARIABLE $iterator-2
                
                1.1.ConditionClause:
                LOAD VARIABLE $iterator-2
                SEND $hasNext TO COMPONENT
                JUMP TO 1.WithStatementDone ON FALSE
                LOAD VARIABLE $iterator-2
                SEND $next TO COMPONENT
                SAVE VARIABLE $symbol
                
                1.1.1.EvaluateStatement:
                PUSH LITERAL `true`
                SAVE VARIABLE $x
                
                1.1.2.IfStatement:
                JUMP TO NEXT INSTRUCTION
                
                1.1.2.1.ConditionClause:
                LOAD VARIABLE $x
                JUMP TO 1.1.2.IfStatementDone ON FALSE
                
                1.1.2.1.1.EvaluateStatement:
                PUSH LITERAL `none`
                SAVE VARIABLE $y
                
                1.1.2.1.2.ContinueStatement:
                JUMP TO 1.1.ConditionClause
                
                1.1.2.IfStatementDone:
                JUMP TO NEXT INSTRUCTION
                
                1.1.3.EvaluateStatement:
                PUSH LITERAL `any`
                SAVE VARIABLE $z
                
                1.ConditionRepeat:
                JUMP TO 1.1.ConditionClause
                
                1.WithStatementDone:
                LOAD VARIABLE $result-1
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '
                6003E00280016001E00118166001E0038004280180050000600518122803
                80060004000028028007000460025000
            '(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
            ]
            $variables: [
                $iterator-2
                $result-1
                $sequence
                $symbol
                $x
                $y
                $z
            ]($type: /nebula/collections/Set/v1)
            $messages: [
                $hasNext
                $iterator
                $next
            ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.WithStatement": 1
                "1.1.ConditionClause": 4
                "1.1.1.EvaluateStatement": 10
                "1.1.2.IfStatement": 12
                "1.1.2.1.ConditionClause": 13
                "1.1.2.1.1.EvaluateStatement": 15
                "1.1.2.1.2.ContinueStatement": 17
                "1.1.2.IfStatementDone": 18
                "1.1.3.EvaluateStatement": 19
                "1.ConditionRepeat": 21
                "1.WithStatementDone": 22
            ]
        ]
    ]
    $literals: [
        true
        any
        none
    ]($type: /nebula/collections/Set/v1)
]
