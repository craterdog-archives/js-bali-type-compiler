[
    $description: "
        This abstract class defines the procedures for the messages that all composite components
        support.
    "($mediatype: "application/bsmd")
    $parent: /bali/abstractions/Component/v1
    $parameters: [:]
    $constants: [:]
    $procedures: [
        $subcomponent: [
            $description: "
                This procedure retrieves the subcomponent associated with the specified index.
            "($mediatype: "application/bsmd")
            $type: /bali/abstractions/Component/v1
            $source: {
                throw [
                    $module: /bali/abstractions/Composite
                    $procedure: $subcomponent
                    $exception: $abstractMethod
                    $text: "An abstract method must be implemented by a subclass."
                ]
            }($index: /bali/abstractions/Element/v1)
            $instructions: "
                1.ThrowStatement:
                INVOKE $catalog
                PUSH LITERAL `$module`
                PUSH LITERAL `/bali/abstractions/Composite`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$procedure`
                PUSH LITERAL `$subcomponent`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$exception`
                PUSH LITERAL `$abstractMethod`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$text`
                PUSH LITERAL `"An abstract method must be implemented by a subclass."`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                HANDLE EXCEPTION
            "($mediatype: "application/basm")
            $bytecode: '
                A01428012802B00BB00128032804B00BB00128052806B00BB00128072808
                B00BB001E800
            '(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ThrowStatement": 1
            ]
            $parameters: [
                $index
            ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: []($type: /bali/collections/Set/v1)
        ]
        $setSubcomponent: [
            $description: "
                This procedure sets the subcomponent associated with the specified index to the
                specified value.
            "($mediatype: "application/bsmd")
            $type: none
            $source: {
                throw [
                    $module: /bali/abstractions/Composite
                    $procedure: $subcomponent
                    $exception: $abstractMethod
                    $text: "An abstract method must be implemented by a subclass."
                ]
            }(
                $index: /bali/abstractions/Element/v1
                $value: /bali/abstractions/Component/v1
            )
            $instructions: "
                1.ThrowStatement:
                INVOKE $catalog
                PUSH LITERAL `$module`
                PUSH LITERAL `/bali/abstractions/Composite`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$procedure`
                PUSH LITERAL `$subcomponent`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$exception`
                PUSH LITERAL `$abstractMethod`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$text`
                PUSH LITERAL `"An abstract method must be implemented by a subclass."`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                HANDLE EXCEPTION
            "($mediatype: "application/basm")
            $bytecode: '
                A01428012802B00BB00128032804B00BB00128052806B00BB00128072808
                B00BB001E800
            '(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ThrowStatement": 1
            ]
            $parameters: [
                $index
                $value
            ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: []($type: /bali/collections/Set/v1)
        ]
    ]
    $literals: [
        $module
        /bali/abstractions/Composite
        $procedure
        $subcomponent
        $exception
        $abstractMethod
        $text
        "An abstract method must be implemented by a subclass."
    ]
](
    $name: /bali/abstractions/Composite/v1
    $type: /bali/abstractions/Class/v1($existence: $abstract)
    $tag: #XLWZBR7XA25FKLVS1P5DFW4ZLPJQC65F
    $version: v1
    $permissions: /bali/permissions/public/v1
    $previous: none
)
