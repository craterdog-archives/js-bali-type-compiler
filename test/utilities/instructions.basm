SKIP INSTRUCTION

1.jump:
JUMP TO 2.push
JUMP TO 3.pop ON NONE
JUMP TO 4.load ON TRUE
JUMP TO 5.store ON FALSE

2.push:
PUSH HANDLER 8.handle
PUSH LITERAL `"This is a literal text string\ncontaining an \` and spanning multiple lines."`
PUSH LITERAL `{
    $foo := bar
    $bar := baz
    $baz := foo
}($bar: 5)`
PUSH CONSTANT $constant
PUSH PARAMETER $parameter

3.pop:
POP HANDLER
POP COMPONENT

4.load:
LOAD VARIABLE $variable
LOAD MESSAGE $queue
LOAD DRAFT $reference
LOAD DOCUMENT $reference

5.store:
STORE VARIABLE $variable
STORE MESSAGE $queue
STORE DRAFT $reference
STORE DOCUMENT $reference

6.invoke:
INVOKE $random
INVOKE $factorial WITH ARGUMENT
INVOKE $sum WITH 2 ARGUMENTS
INVOKE $sort WITH 3 ARGUMENTS

7.execute:
EXECUTE $generateKey
EXECUTE $fibonacci WITH ARGUMENTS
EXECUTE $hasNext ON TARGET
EXECUTE $addItem ON TARGET WITH ARGUMENTS

8.handle:
HANDLE RESULT
HANDLE EXCEPTION
